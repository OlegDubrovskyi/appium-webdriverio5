"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.SIMULATE_LOCATION_SERVICE_NAME = exports.SimulateLocationService = void 0;

require("source-map-support/register");

const SIMULATE_LOCATION_SERVICE_NAME = 'com.apple.dt.simulatelocation';
exports.SIMULATE_LOCATION_SERVICE_NAME = SIMULATE_LOCATION_SERVICE_NAME;
const RESET_MESSAGE = Buffer.from([0, 0, 0, 1]);
const SET_LOCATION_MESSAGE = Buffer.from([0, 0, 0, 0]);

class SimulateLocationService {
  constructor(socketClient) {
    this._socketClient = socketClient;
  }

  resetLocation() {
    this._socketClient.write(RESET_MESSAGE);
  }

  setLocation(lat, long) {
    lat = `${lat}`;
    long = `${long}`;
    const lat_length = Buffer.alloc(4);
    lat_length.writeInt32BE(lat.length);
    const long_length = Buffer.alloc(4);
    long_length.writeInt32BE(long.length);

    this._socketClient.write(SET_LOCATION_MESSAGE);

    this._socketClient.write(lat_length);

    this._socketClient.write(lat);

    this._socketClient.write(long_length);

    this._socketClient.write(long);
  }

  close() {
    this._socketClient.destroy();
  }

}

exports.SimulateLocationService = SimulateLocationService;
var _default = SimulateLocationService;
exports.default = _default;require('source-map-support').install();


//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9zaW11bGF0ZWxvY2F0aW9uL2luZGV4LmpzIl0sIm5hbWVzIjpbIlNJTVVMQVRFX0xPQ0FUSU9OX1NFUlZJQ0VfTkFNRSIsIlJFU0VUX01FU1NBR0UiLCJCdWZmZXIiLCJmcm9tIiwiU0VUX0xPQ0FUSU9OX01FU1NBR0UiLCJTaW11bGF0ZUxvY2F0aW9uU2VydmljZSIsImNvbnN0cnVjdG9yIiwic29ja2V0Q2xpZW50IiwiX3NvY2tldENsaWVudCIsInJlc2V0TG9jYXRpb24iLCJ3cml0ZSIsInNldExvY2F0aW9uIiwibGF0IiwibG9uZyIsImxhdF9sZW5ndGgiLCJhbGxvYyIsIndyaXRlSW50MzJCRSIsImxlbmd0aCIsImxvbmdfbGVuZ3RoIiwiY2xvc2UiLCJkZXN0cm95Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFDQSxNQUFNQSw4QkFBOEIsR0FBRywrQkFBdkM7O0FBRUEsTUFBTUMsYUFBYSxHQUFHQyxNQUFNLENBQUNDLElBQVAsQ0FBWSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsQ0FBWixDQUF0QjtBQUNBLE1BQU1DLG9CQUFvQixHQUFHRixNQUFNLENBQUNDLElBQVAsQ0FBWSxDQUFDLENBQUQsRUFBSSxDQUFKLEVBQU8sQ0FBUCxFQUFVLENBQVYsQ0FBWixDQUE3Qjs7QUFFQSxNQUFNRSx1QkFBTixDQUE4QjtBQUU1QkMsRUFBQUEsV0FBVyxDQUFFQyxZQUFGLEVBQWdCO0FBQ3pCLFNBQUtDLGFBQUwsR0FBcUJELFlBQXJCO0FBQ0Q7O0FBSURFLEVBQUFBLGFBQWEsR0FBSTtBQUNmLFNBQUtELGFBQUwsQ0FBbUJFLEtBQW5CLENBQXlCVCxhQUF6QjtBQUNEOztBQU9EVSxFQUFBQSxXQUFXLENBQUVDLEdBQUYsRUFBT0MsSUFBUCxFQUFhO0FBQ3RCRCxJQUFBQSxHQUFHLEdBQUksR0FBRUEsR0FBSSxFQUFiO0FBQ0FDLElBQUFBLElBQUksR0FBSSxHQUFFQSxJQUFLLEVBQWY7QUFFQSxVQUFNQyxVQUFVLEdBQUdaLE1BQU0sQ0FBQ2EsS0FBUCxDQUFhLENBQWIsQ0FBbkI7QUFDQUQsSUFBQUEsVUFBVSxDQUFDRSxZQUFYLENBQXdCSixHQUFHLENBQUNLLE1BQTVCO0FBRUEsVUFBTUMsV0FBVyxHQUFHaEIsTUFBTSxDQUFDYSxLQUFQLENBQWEsQ0FBYixDQUFwQjtBQUNBRyxJQUFBQSxXQUFXLENBQUNGLFlBQVosQ0FBeUJILElBQUksQ0FBQ0ksTUFBOUI7O0FBRUEsU0FBS1QsYUFBTCxDQUFtQkUsS0FBbkIsQ0FBeUJOLG9CQUF6Qjs7QUFFQSxTQUFLSSxhQUFMLENBQW1CRSxLQUFuQixDQUF5QkksVUFBekI7O0FBQ0EsU0FBS04sYUFBTCxDQUFtQkUsS0FBbkIsQ0FBeUJFLEdBQXpCOztBQUVBLFNBQUtKLGFBQUwsQ0FBbUJFLEtBQW5CLENBQXlCUSxXQUF6Qjs7QUFDQSxTQUFLVixhQUFMLENBQW1CRSxLQUFuQixDQUF5QkcsSUFBekI7QUFDRDs7QUFFRE0sRUFBQUEsS0FBSyxHQUFJO0FBQ1AsU0FBS1gsYUFBTCxDQUFtQlksT0FBbkI7QUFDRDs7QUF0QzJCOzs7ZUEyQ2ZmLHVCIiwic291cmNlc0NvbnRlbnQiOlsiLy9XZSBqdXN0IG5lZWQgdG8gd3JpdGUgYW55IGRhdGEgdG8gdGhlIGNsaWVudC4gSXQgZG9lc24ndCBtYXR0ZXIgd2hhdCB3ZSBzZW5kXG5jb25zdCBTSU1VTEFURV9MT0NBVElPTl9TRVJWSUNFX05BTUUgPSAnY29tLmFwcGxlLmR0LnNpbXVsYXRlbG9jYXRpb24nO1xuXG5jb25zdCBSRVNFVF9NRVNTQUdFID0gQnVmZmVyLmZyb20oWzAsIDAsIDAsIDFdKTtcbmNvbnN0IFNFVF9MT0NBVElPTl9NRVNTQUdFID0gQnVmZmVyLmZyb20oWzAsIDAsIDAsIDBdKTtcblxuY2xhc3MgU2ltdWxhdGVMb2NhdGlvblNlcnZpY2Uge1xuXG4gIGNvbnN0cnVjdG9yIChzb2NrZXRDbGllbnQpIHtcbiAgICB0aGlzLl9zb2NrZXRDbGllbnQgPSBzb2NrZXRDbGllbnQ7XG4gIH1cbiAgLyoqXG4gICAqIFJlc2V0IHRoZSBtb2NrIGxvY2F0aW9uIHRvIHRoZSBwaG9uZXMgb3JpZ2luYWwgc2V0dGluZ3NcbiAgICovXG4gIHJlc2V0TG9jYXRpb24gKCkge1xuICAgIHRoaXMuX3NvY2tldENsaWVudC53cml0ZShSRVNFVF9NRVNTQUdFKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdGhlIG1vY2sgbG9jYXRpb24gb24gdGhlIGRldmljZVxuICAgKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IGxhdCBUaGUgbGF0aXR1ZGUgdGhhdCB3YW50cyB0byBiZSBzZXQgb24gdGhlIGRldmljZVxuICAgKiBAcGFyYW0ge3N0cmluZ3xudW1iZXJ9IGxvbmcgVGhlIGxvbmdpdHVkZSB0aGF0IHdhbnRzIHRvIGJlIHNldCBvbiB0aGUgZGV2aWNlXG4gICAqL1xuICBzZXRMb2NhdGlvbiAobGF0LCBsb25nKSB7XG4gICAgbGF0ID0gYCR7bGF0fWA7XG4gICAgbG9uZyA9IGAke2xvbmd9YDtcblxuICAgIGNvbnN0IGxhdF9sZW5ndGggPSBCdWZmZXIuYWxsb2MoNCk7XG4gICAgbGF0X2xlbmd0aC53cml0ZUludDMyQkUobGF0Lmxlbmd0aCk7XG5cbiAgICBjb25zdCBsb25nX2xlbmd0aCA9IEJ1ZmZlci5hbGxvYyg0KTtcbiAgICBsb25nX2xlbmd0aC53cml0ZUludDMyQkUobG9uZy5sZW5ndGgpO1xuXG4gICAgdGhpcy5fc29ja2V0Q2xpZW50LndyaXRlKFNFVF9MT0NBVElPTl9NRVNTQUdFKTtcblxuICAgIHRoaXMuX3NvY2tldENsaWVudC53cml0ZShsYXRfbGVuZ3RoKTtcbiAgICB0aGlzLl9zb2NrZXRDbGllbnQud3JpdGUobGF0KTtcblxuICAgIHRoaXMuX3NvY2tldENsaWVudC53cml0ZShsb25nX2xlbmd0aCk7XG4gICAgdGhpcy5fc29ja2V0Q2xpZW50LndyaXRlKGxvbmcpO1xuICB9XG5cbiAgY2xvc2UgKCkge1xuICAgIHRoaXMuX3NvY2tldENsaWVudC5kZXN0cm95KCk7XG4gIH1cblxufVxuXG5leHBvcnQgeyBTaW11bGF0ZUxvY2F0aW9uU2VydmljZSwgU0lNVUxBVEVfTE9DQVRJT05fU0VSVklDRV9OQU1FIH07XG5leHBvcnQgZGVmYXVsdCBTaW11bGF0ZUxvY2F0aW9uU2VydmljZTsiXSwiZmlsZSI6ImxpYi9zaW11bGF0ZWxvY2F0aW9uL2luZGV4LmpzIiwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
